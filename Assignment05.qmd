---
title: "WDI Data Exploratory Analysis"
subtitle: "QTM 350 Problem Set 05"
author: "Liane Muir"
date: "2025-02-25"
format:
  html: default
  pdf: default
bibliography: references.bib
output-dir: docs
---

## Exploratory Analysis

The three indicators I selected for my exploratory analysis of the World Development Indicators dataset:

1.  Inflation Rate
2.  Life Expectancy
3.  GDP per Capita

### Key Statistics

```{python}
#| echo: false
#| output: asis

import pandas as pd

# Load the dataset
df = pd.read_csv("wdi.csv")

# Select relevant columns for analysis
selected_columns = ["inflation_rate", "life_expectancy", "gdp_per_capita"]
df_selected = df[selected_columns]

# Calculate key statistics
key_stats = df_selected.describe().T
key_stats = key_stats[['mean', 'std', 'min', '25%', '50%', '75%', 'max']]
key_stats.columns = ['Mean', 'Standard Deviation', 'Min', '25th Percentile', 'Median', '75th Percentile', 'Max']

# Rename rows for better clarity
key_stats.index = ['Inflation Rate (%)', 'Life Expectancy (Years)', 'GDP per Capita (USD)']

# Convert the DataFrame to a Markdown table
print(key_stats.to_markdown())
```

```{python}
#| echo: false
#| fig-cap: "Distribution of key economic and health indicators. This figure shows the distribution of three indicators across countries in 2022.The density curves help elucidate overall trends. "
#| label: fig-histograms 

import matplotlib.pyplot as plt
import seaborn as sns

# Set Seaborn style
sns.set_style("whitegrid")

# Histograms for distribution analysis
fig, axes = plt.subplots(1, 3, figsize=(18, 5))

for ax, col in zip(axes, selected_columns):
    title = col.replace('_', ' ').title()
    if col == "gdp_per_capita":
        title = title.upper()
    sns.histplot(df[col].dropna(), bins=20, kde=True, ax=ax)
    ax.set_title(f"Distribution of {title}")
    ax.set_xlabel(title)

plt.tight_layout()
plt.show()


#ChatGPT used to write code for summary statistics and figures
```

### Analysis Summary

#### Inflation Rate

Across the 217 countries documented in this dataset, inflation rates vary (*mean* = 12.49%; *SD* = 19.68%), but a right-skewed distribution (@fig-histograms) shows that most countries have inflation rates below 15%. The range of values goes from -6.69% (deflation) to 171.2% (hyperinflation).

Some more probing gives a more detailed count of the number of countries within each inflation rate category:

```{python}
#| echo: false
#| output: asis

import pandas as pd

# Define inflation categories
def categorize_inflation(rate):
    if rate < 2:
        return "Low Inflation (<2%)"
    elif 2 <= rate <= 5:
        return "Moderate Inflation (2-5%)"
    elif 5 < rate <= 10:
        return "Elevated Inflation (5-10%)"
    elif 10 < rate <= 50:
        return "High Inflation (10-50%)"
    else:
        return "Hyperinflation (>50%)"

# Apply categorization
df["inflation_category"] = df["inflation_rate"].apply(lambda x: categorize_inflation(x) if pd.notnull(x) else "Missing Data")

# Count occurrences of each category
inflation_counts = df["inflation_category"].value_counts()

# Reorder categories for plotting
category_order = ["Low Inflation (<2%)", "Moderate Inflation (2-5%)", "Elevated Inflation (5-10%)", "High Inflation (10-50%)", "Hyperinflation (>50%)", "Missing Data"]
inflation_counts = inflation_counts.reindex(category_order)

# Convert the Series to a DataFrame for better formatting
inflation_counts_df = inflation_counts.reset_index()
inflation_counts_df.columns = ["Inflation Category", "Number of Countries"]

# Convert the DataFrame to a Markdown table
print(inflation_counts_df.to_markdown(index=False))
```

As in the table above, we see in @fig-barplot that the "Elevated Inflation" category has the highest number of countries.

```{python}
#| echo: false
#| fig-cap: "Bar plot showing the number of countries by inflation category. This figure provides a detailed count of the number of countries within each inflation rate category."
#| label: fig-barplot

# Bar Plot: Number of Countries by Inflation Category
plt.figure(figsize=(10, 6))
sns.barplot(x="Inflation Category", y="Number of Countries", data=inflation_counts_df, palette="viridis", hue="Inflation Category", dodge=False, legend=False)
plt.title("Number of Countries by Inflation Category", fontsize=16)
plt.xlabel("Inflation Category", fontsize=14)
plt.ylabel("Number of Countries", fontsize=14)
plt.xticks(rotation=45, fontsize=12)
plt.yticks(fontsize=12)
plt.tight_layout()
plt.show()
```

#### Life Expectancy

Ther average life expectancy in our dataset is 72.4 years (*SD* = 7.7 years), and the range runs from 53 years to 85.4 years. A slightly-left skewed distribution (@fig-histograms) that more measured countries maintain higher life expectancy values, clustering around 70-80 years.

#### GDP per Capita

The distribution (@fig-histograms) of GDP per Capita, typically a measure of economic prosperity, is notably right-skewed, indicating that most countries in the dataset have lower GDP, while a few wealthier countries raise the mean (\$20,345). The standard deviation for these values is high at \$31,309.

```{python}
#| echo: false
#| fig-cap: "Scatter plot of GDP per Capita vs Life Expectancy. This figure shows the relationship between GDP per Capita and Life Expectancy across countries, categorized by inflation rates. A log scale is used for GDP per Capita to better visualize the wide range of values. The regression line illustrates the overall trend and relationship between GDP and life expectancy. Data source: [World Development Indicators](https://databank.worldbank.org/source/world-development-indicators)."
#| label: fig-scatter

# Scatter Plot: GDP per Capita vs Life Expectancy
plt.figure(figsize=(12, 8))
sns.scatterplot(data=df, x="gdp_per_capita", y="life_expectancy", alpha=0.7, hue="inflation_category", palette="viridis", hue_order=category_order)
plt.xscale("log")  # Log scale for better visualization
plt.title("GDP per Capita vs Life Expectancy", fontsize=16)
plt.xlabel("GDP per Capita (log scale, USD)", fontsize=14)
plt.ylabel("Life Expectancy (Years)", fontsize=14)
plt.xticks(fontsize=12)
plt.yticks(fontsize=12)
plt.grid(True, which="major", linestyle='--', linewidth=0.5)  # Limit grid lines to major ticks
plt.legend(title="Inflation Category", bbox_to_anchor=(1.05, 1), loc='upper left', fontsize=12, title_fontsize=14)

# Add a regression line
sns.regplot(data=df, x="gdp_per_capita", y="life_expectancy", scatter=False, color="blue", logx=True)

# Set labels again after regplot
plt.xlabel("GDP per Capita (log scale, USD)", fontsize=14)
plt.ylabel("Life Expectancy (Years)", fontsize=14)

plt.show()
```

Analysis of the relationship between life expectancy and GDP per capita reveals a positive correlation between the two variables (@fig-scatter).

Similar relationships have been observed in various studies, clarifying the relationship between economic development and health outcomes. One study found that with increases in GDP per capita, life expectancy at birth increased and infant mortality rates lowered (a stronger relationship occuring in countries with lower levels of income inequality) [@miladinov2020socioeconomic]. A 2005-2015 cross-sectional analysis focused on the relationship between GDP and life expectancy in Russia, also showed a positive relationship between the two variables [@shkolnikov2019patterns].

These articles emphasize that economic development promotes better health outocomes through improved living conditions, healthcare access, and quality of life.

````
